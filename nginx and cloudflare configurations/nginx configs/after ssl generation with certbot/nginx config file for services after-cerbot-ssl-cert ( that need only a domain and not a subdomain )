
server {
    listen 80;
    server_name domainnaim.com;

    # ACME challenge for Certbot:    THIS IS VERY IMPORTANT FOR CERTBOT (you must have it on port 80 ) . Remeber port 80 and 443 MUST BE PORTFORWARTED FROM YOUR ROUTER TO THE INTERNET 
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Everything else → HTTPS
   
        return 301 https://$host$request_uri;
    
}

server {
    listen 443 ssl http2;
    server_name domainnaim.com;

    ssl_certificate     /etc/letsencrypt/live/domainnaim.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/domainnaim.com/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    # Your public‑facing site content
 return 404;
}

# ───────────────────────────────────────────────────────────────────────────────
# 2) Internal‑only proxy on Server_Ip:8443
# ───────────────────────────────────────────────────────────────────────────────
server {
    # Bind only to LAN IP on port 8443
    listen Server_Ip:8443 ssl http2; # IMPORTANT PART !!!! ADD YOUR PRIVATE IP AND THE PORT YOU WANT ( WE WILL CONTROLL THROUGH UFW)
    server_name domainnaim.com;  

    ssl_certificate     /etc/letsencrypt/live/domainnaim.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/domainnaim.com/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

  # Deny dotfiles (top-level)
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

   
   
     location / {    # for dockge don't use /dockge/ because it won't work . 

         allow #Ip device  you want to have access (could be vpn subnet or internal static ip of phone );
         allow #n8n container subnet ( see n8n installation.txt) 
         # allow ......
        deny all;

        proxy_pass         http://127.0.0.1:8000/;
        proxy_http_version 1.1;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Connection        "";
   
    }

   
   
    location /emby/ {

         allow #Ip device  you want to have access (could be vpn subnet or internal static ip of phone );
         allow #n8n container subnet ( see n8n installation.txt) 
         # allow ......
        deny all;

        proxy_pass         http://127.0.0.1:8096/;   # since we exposed emby container to 127.0.0.1 .
        proxy_http_version 1.1;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Connection        "";
    }

  location /homer/ {


       allow #Ip device  you want to have access (could be vpn subnet or internal static ip of phone );
         allow #n8n container subnet ( see n8n installation.txt) 
         # allow ......
        deny all;

        proxy_pass         http://127.0.0.1:8080/; # since we exposed homer container to 127.0.0.1 .
        proxy_http_version 1.1;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Connection        "";
    }

  location /monitor/ {


        allow #Ip device  you want to have access (could be vpn subnet or internal static ip of phone );
         allow #n8n container subnet ( see n8n installation.txt) 
         # allow ......
        deny all;

        proxy_pass         http://127.0.0.1:4000/;  # since we exposed Netdata container to 127.0.0.1 .
        proxy_http_version 1.1;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Connection        "";
    }

  #Add services here


}

