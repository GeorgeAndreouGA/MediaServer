 server {
    listen 443 ssl http2;
    server_name  yourDomain;  # replace with your domain name

    ssl_certificate /etc/letsencrypt/live/yourDomain/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourDomain/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;   
 
 
 # Secure Headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy no-referrer;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()";
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

  
 # Deny dotfiles (top-level)
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
   # This is for the client ( index.html )
    location /index {
        proxy_pass http://127.0.0.1:3000/index;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

   location  /index.html {
        return 301 /index;
    }


location /music/ {
        alias "yourMusicPath";  # replace with your music path  
     
    sendfile off;
    tcp_nopush on;
    add_header Cache-Control "public, max-age=86400";
    add_header Accept-Ranges bytes;
    autoindex off;
    types {
        audio/mpeg mp3;
        audio/wav wav;
        audio/flac flac;
    }
}
  location /published {
        proxy_pass http://127.0.0.1:3000/published.json;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

}
 
  location  /published.json {
        return 301 /published;
    } 
  
  location / {
        return 301 /index;
    }

}

server {
    listen your_server_ip:3003 ssl http2;
    server_name yourDomain;  

    ssl_certificate /etc/letsencrypt/live/yourDomain/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourDomain/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
   
   # Secure Headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy no-referrer;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()";
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
 
   # Deny dotfiles (top-level)
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location /admin  {

         allow #Ip device  you want to have access to the admin pannel (could be vpn subnet or internal static ip of phone );
         allow # .....
        deny all;


        proxy_pass http://127.0.0.1:3000/admin;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;

    }


  location  /published {
       
         allow #Ip device  you want to have access to the admin pannel (could be vpn subnet or internal static ip of phone );
         allow # .....
        deny all;
    
        proxy_pass http://127.0.0.1:3000/published.json;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
 
}
  
    location  /published.json {
        return 301 /published;
    }

    location  /scheduled {
       
         allow #Ip device  you want to have access to the admin pannel (could be vpn subnet or internal static ip of phone );
         allow # .....
        deny all;
       
        proxy_pass http://127.0.0.1:3000/scheduled.json;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  

  }

   location  /scheduled.json {
        return 301 /scheduled;
    }

  location /music/ {
        alias "yourMusicPath";  # replace with your music path

    sendfile off;
    tcp_nopush on;
    add_header Cache-Control "public, max-age=86400";
    add_header Accept-Ranges bytes;
    autoindex off;
    types {
        audio/mpeg mp3;
        audio/wav wav;
        audio/flac flac;
    }
 }

 location / {
        return 404;
    }

}

server {
    listen 80;
    server_name yourDomain;  # replace with your domain name


   # ACME challenge for Certbot:
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    return 301 https://$host$request_uri;
}
